{"version":3,"names":["_react","_interopRequireWildcard","require","_reactNative","_Surface","_interopRequireDefault","_Text","_ActivityIndicator","_Pressable","_usePaletteColor","_useSurfaceScale","_useStyles","_useAnimatedElevation","obj","__esModule","default","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_extends","assign","bind","target","i","arguments","length","source","apply","Button","_ref","title","leading","trailing","variant","color","tintColor","compact","disableElevation","uppercase","loading","loadingIndicatorPosition","loadingIndicator","style","pressableContainerStyle","contentContainerStyle","titleStyle","leadingContainerStyle","trailingContainerStyle","loadingOverlayContainerStyle","pressEffect","pressEffectColor","onPress","onPressIn","onPressOut","onLongPress","onBlur","onFocus","onMouseEnter","onMouseLeave","delayLongPress","disabled","hitSlop","pressRetentionOffset","android_disableSound","android_ripple","testOnly_pressed","rest","surfaceScale","useSurfaceScale","p","usePaletteColor","hex","contentColor","useMemo","on","main","hasLeading","hasTrailing","styles","useStyles","_ref2","shapes","container","backgroundColor","outline","small","borderWidth","borderColor","pressableContainer","overflow","pressable","minWidth","height","flexDirection","justifyContent","alignItems","paddingStart","paddingEnd","textTransform","opacity","leadingContainer","marginEnd","trailingContainer","marginStart","loadingOverlayContainer","StyleSheet","absoluteFillObject","getTitle","createElement","selectable","getLoadingIndicator","getLeading","size","getTrailing","hovered","setHovered","useState","handleMouseEnter","useCallback","event","handleMouseLeave","pressed","setPressed","handlePressIn","handlePressOut","animatedElevation","useAnimatedElevation","category","View","absoluteFill","pointerEvents","_default","exports"],"sources":["Button.tsx"],"sourcesContent":["import React, { useCallback, useMemo, useState } from 'react';\nimport {\n  GestureResponderEvent,\n  NativeSyntheticEvent,\n  StyleProp,\n  StyleSheet,\n  TargetedEvent,\n  TextStyle,\n  View,\n  ViewStyle,\n} from 'react-native';\nimport Surface, { SurfaceProps } from './Surface';\nimport Text from './Text';\nimport ActivityIndicator from './ActivityIndicator';\nimport Pressable, { PressableProps } from './Pressable';\nimport { Color, usePaletteColor } from './hooks/use-palette-color';\nimport { useSurfaceScale } from './hooks/use-surface-scale';\nimport { useStyles } from './hooks/use-styles';\nimport { useAnimatedElevation } from './hooks/use-animated-elevation';\n\nexport interface ButtonProps extends Omit<SurfaceProps, 'hitSlop'>, Omit<PressableProps, 'style' | 'children'> {\n  /**\n   * The text content of the button.\n   */\n  title: string | React.ReactNode | ((props: { color: string }) => React.ReactNode | null) | null;\n\n  /**\n   * The element placed before the `title`.\n   */\n  leading?: React.ReactNode | ((props: { color: string; size: number }) => React.ReactNode | null) | null;\n\n  /**\n   * The element placed after the `title`.\n   */\n  trailing?: React.ReactNode | ((props: { color: string; size: number }) => React.ReactNode | null) | null;\n\n  /**\n   * The style of the button.\n   * - `text`: Text buttons are typically used for less important actions (low emphasis).\n   * - `outlined`: Outlined buttons are used for more emphasis than text buttons due to the stroke (medium emphasis).\n   * - `contained`: Contained buttons have more emphasis, as they use a color fill and shadow (high emphasis).\n   *\n   * @default \"contained\"\n   */\n  variant?: 'text' | 'outlined' | 'contained';\n\n  /**\n   * The main color of the button.\n   * for `contained` buttons, this is the background color.\n   * for `outlined` and `text` buttons, this is the color of the content (text, icons, etc.).\n   *\n   * @default \"primary\"\n   */\n  color?: Color;\n\n  /**\n   * The color of the `contained` buttons content (text, icons, etc.). No effect on `outlined` and `text` buttons.\n   */\n  tintColor?: Color;\n\n  /**\n   * Smaller horizontal padding, useful for `text` buttons in a row.\n   *\n   * @default false\n   */\n  compact?: boolean;\n\n  /**\n   * If `true`, no shadow is used. No effect on `outlined` and `text` buttons.\n   *\n   * @default false\n   */\n  disableElevation?: boolean;\n\n  /**\n   * If `false`, the button title is not rendered in upper case. No effect if you pass a React.Node as the `title` prop.\n   *\n   * @default true\n   */\n  uppercase?: boolean;\n\n  /**\n   * Whether to show a loading indicator.\n   *\n   * @default false\n   */\n  loading?: boolean;\n\n  /**\n   * The place where the loading indicator should appear.\n   * - `leading`: The indicator will replace the `leading` element.\n   * - `trailing`: The indicator will replace the `trailing` element.\n   * - `overlay`: The indicator will be added as an overlay over the button.\n   *\n   * @default \"leading\"\n   */\n  loadingIndicatorPosition?: 'leading' | 'trailing' | 'overlay';\n\n  /**\n   * A React.Node to replace the default loading indicator. Also, you can pass a string to show a text (e.g. \"Loading...\").\n   */\n  loadingIndicator?: string | React.ReactNode | ((props: { color: string }) => React.ReactNode | null) | null;\n\n  /**\n   * The style of the button's pressable component container.\n   */\n  pressableContainerStyle?: StyleProp<ViewStyle>;\n\n  /**\n   * The style of the button's container.\n   */\n  contentContainerStyle?: PressableProps['style'];\n\n  /**\n   * The style of the button's text. No effect if you pass a React.Node as the `title` prop.\n   */\n  titleStyle?: StyleProp<TextStyle>;\n\n  /**\n   * The style of the button's leading element container.\n   */\n  leadingContainerStyle?: StyleProp<ViewStyle>;\n\n  /**\n   * The style of the button's trailing element container.\n   */\n  trailingContainerStyle?: StyleProp<ViewStyle>;\n\n  /**\n   * The style of the button's loading indicator overlay view. No effect if `loadingIndicatorPosition` is not `overlay`.\n   */\n  loadingOverlayContainerStyle?: StyleProp<ViewStyle>;\n}\n\nconst Button: React.FC<ButtonProps> = ({\n  title,\n  leading,\n  trailing,\n  variant = 'contained',\n  color = 'primary',\n  tintColor,\n  compact = false,\n  disableElevation = false,\n  uppercase = true,\n  loading = false,\n  loadingIndicatorPosition = 'leading',\n  loadingIndicator,\n\n  style,\n  pressableContainerStyle,\n  contentContainerStyle,\n  titleStyle,\n  leadingContainerStyle,\n  trailingContainerStyle,\n  loadingOverlayContainerStyle,\n\n  pressEffect,\n  pressEffectColor,\n  onPress,\n  onPressIn,\n  onPressOut,\n  onLongPress,\n  onBlur,\n  onFocus,\n  onMouseEnter,\n  onMouseLeave,\n  delayLongPress,\n  disabled,\n  hitSlop,\n  pressRetentionOffset,\n  android_disableSound,\n  android_ripple,\n  testOnly_pressed,\n\n  ...rest\n}) => {\n  const surfaceScale = useSurfaceScale();\n\n  const p = usePaletteColor(\n    disabled ? surfaceScale(0.12).hex() : color,\n    disabled ? surfaceScale(0.35).hex() : tintColor\n  );\n\n  const contentColor = useMemo(\n    () => (variant === 'contained' ? p.on : disabled ? p.on : p.main),\n    [variant, p, disabled]\n  );\n\n  const hasLeading = useMemo(\n    () => !!leading || (loading && loadingIndicatorPosition === 'leading'),\n    [leading, loading, loadingIndicatorPosition]\n  );\n\n  const hasTrailing = useMemo(\n    () => !!trailing || (loading && loadingIndicatorPosition === 'trailing'),\n    [trailing, loading, loadingIndicatorPosition]\n  );\n\n  const styles = useStyles(\n    ({ shapes }) => ({\n      container: {\n        backgroundColor: variant === 'contained' ? p.main : 'transparent',\n      },\n      outline: {\n        ...shapes.small,\n        borderWidth: 1,\n        borderColor: surfaceScale(0.12).hex(),\n      },\n      pressableContainer: {\n        ...shapes.small,\n        overflow: 'hidden',\n      },\n      pressable: {\n        minWidth: 64,\n        height: 36,\n        flexDirection: 'row',\n        justifyContent: 'center',\n        alignItems: 'center',\n        paddingStart: hasLeading ? (compact ? 6 : 12) : compact ? 8 : 16,\n        paddingEnd: hasTrailing ? (compact ? 6 : 12) : compact ? 8 : 16,\n      },\n      titleStyle: {\n        textTransform: uppercase ? 'uppercase' : 'none',\n        opacity: loading && loadingIndicatorPosition === 'overlay' ? 0 : 1,\n      },\n      leadingContainer: {\n        marginEnd: compact ? 6 : 8,\n        opacity: loading && loadingIndicatorPosition === 'overlay' ? 0 : 1,\n      },\n      trailingContainer: {\n        marginStart: compact ? 6 : 8,\n        opacity: loading && loadingIndicatorPosition === 'overlay' ? 0 : 1,\n      },\n      loadingOverlayContainer: {\n        ...StyleSheet.absoluteFillObject,\n        justifyContent: 'center',\n        alignItems: 'center',\n      },\n    }),\n    [variant, uppercase, compact, loading, loadingIndicatorPosition, p, hasLeading, hasTrailing, surfaceScale]\n  );\n\n  const getTitle = () => {\n    switch (typeof title) {\n      case 'string':\n        return (\n          <Text variant=\"button\" selectable={false} style={[{ color: contentColor }, styles.titleStyle, titleStyle]}>\n            {title}\n          </Text>\n        );\n      case 'function':\n        return title({ color: contentColor });\n      default:\n        return title;\n    }\n  };\n\n  const getLoadingIndicator = () => {\n    if (!loadingIndicator) return <ActivityIndicator color={contentColor} />;\n    switch (typeof loadingIndicator) {\n      case 'string':\n        return (\n          <Text variant=\"button\" style={{ color: contentColor }}>\n            {loadingIndicator}\n          </Text>\n        );\n      case 'function':\n        return loadingIndicator({ color: contentColor });\n      default:\n        return loadingIndicator;\n    }\n  };\n\n  const getLeading = () => {\n    if (loading && loadingIndicatorPosition === 'leading') return getLoadingIndicator();\n    return typeof leading === 'function' ? leading({ color: contentColor, size: 18 }) : leading;\n  };\n\n  const getTrailing = () => {\n    if (loading && loadingIndicatorPosition === 'trailing') return getLoadingIndicator();\n    return typeof trailing === 'function' ? trailing({ color: contentColor, size: 18 }) : trailing;\n  };\n\n  const [hovered, setHovered] = useState(false);\n\n  const handleMouseEnter = useCallback(\n    (event: NativeSyntheticEvent<TargetedEvent>) => {\n      onMouseEnter?.(event);\n      setHovered(true);\n    },\n    [onMouseEnter]\n  );\n\n  const handleMouseLeave = useCallback(\n    (event: NativeSyntheticEvent<TargetedEvent>) => {\n      onMouseLeave?.(event);\n      setHovered(false);\n    },\n    [onMouseLeave]\n  );\n\n  const [pressed, setPressed] = useState(false);\n\n  const handlePressIn = useCallback(\n    (event: GestureResponderEvent) => {\n      onPressIn?.(event);\n      setPressed(true);\n    },\n    [onPressIn]\n  );\n\n  const handlePressOut = useCallback(\n    (event: GestureResponderEvent) => {\n      onPressOut?.(event);\n      setPressed(false);\n    },\n    [onPressOut]\n  );\n\n  const animatedElevation = useAnimatedElevation(\n    variant === 'contained' && !disableElevation && !disabled ? (pressed ? 8 : hovered ? 4 : 2) : 0\n  );\n\n  return (\n    <Surface category=\"small\" style={[animatedElevation, styles.container, style]} {...rest}>\n      <View style={[styles.pressableContainer, pressableContainerStyle]}>\n        <Pressable\n          style={[styles.pressable, contentContainerStyle]}\n          pressEffect={pressEffect}\n          pressEffectColor={pressEffectColor ?? contentColor}\n          onPress={onPress}\n          onPressIn={handlePressIn}\n          onPressOut={handlePressOut}\n          onLongPress={onLongPress}\n          onBlur={onBlur}\n          onFocus={onFocus}\n          onMouseEnter={handleMouseEnter}\n          onMouseLeave={handleMouseLeave}\n          delayLongPress={delayLongPress}\n          disabled={disabled}\n          hitSlop={hitSlop}\n          pressRetentionOffset={pressRetentionOffset}\n          android_disableSound={android_disableSound}\n          android_ripple={android_ripple}\n          testOnly_pressed={testOnly_pressed}\n        >\n          {hasLeading && <View style={[styles.leadingContainer, leadingContainerStyle]}>{getLeading()}</View>}\n          {getTitle()}\n          {hasTrailing && <View style={[styles.trailingContainer, trailingContainerStyle]}>{getTrailing()}</View>}\n\n          {loading && loadingIndicatorPosition === 'overlay' && (\n            <View style={[styles.loadingOverlayContainer, loadingOverlayContainerStyle]}>{getLoadingIndicator()}</View>\n          )}\n        </Pressable>\n      </View>\n      {variant === 'outlined' && <View style={[StyleSheet.absoluteFill, styles.outline]} pointerEvents=\"none\" />}\n    </Surface>\n  );\n};\n\nexport default Button;\n"],"mappings":"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"}