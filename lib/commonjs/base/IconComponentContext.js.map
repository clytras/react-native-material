{"version":3,"names":["_react","_interopRequireWildcard","require","_usePaletteColor","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_extends","assign","bind","target","i","arguments","length","source","apply","IconComponentContext","createContext","exports","useIconComponent","useContext","IconComponentProvider","_ref","IconComponent","children","createElement","Provider","value","Icon","_ref2","color","rest","Error","main","usePaletteColor"],"sources":["IconComponentContext.tsx"],"sourcesContent":["import React, { createContext, useContext } from 'react';\nimport { Color, usePaletteColor } from '../hooks/use-palette-color';\n\nexport type IconComponent = React.ComponentType<IconProps>;\n\nexport interface IconComponentProviderProps {\n  IconComponent?: IconComponent | null;\n}\n\nexport const IconComponentContext = createContext<IconComponent | null>(null);\n\nexport const useIconComponent = () => useContext(IconComponentContext);\n\nexport const IconComponentProvider: React.FC<IconComponentProviderProps> = ({ IconComponent, children }) => {\n  return <IconComponentContext.Provider value={IconComponent ?? null}>{children}</IconComponentContext.Provider>;\n};\n\nexport interface IconProps {\n  name: string;\n\n  size?: number;\n\n  color?: Color;\n\n  [key: string]: any;\n}\n\nexport const Icon: React.FC<IconProps> = ({ color = 'on-background', ...rest }) => {\n  const IconComponent = useIconComponent();\n  if (!IconComponent) {\n    throw new Error('`IconComponent` is undefined. Seems like you forgot to wrap your component with `Provider`.');\n  }\n  const { main } = usePaletteColor(color);\n  return <IconComponent {...rest} color={main} />;\n};\n"],"mappings":"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"}