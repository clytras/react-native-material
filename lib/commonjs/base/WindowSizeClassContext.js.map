{"version":3,"names":["_react","_interopRequireWildcard","require","_reactNative","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","defaultWindowSizes","base","sm","md","lg","xl","exports","WindowSizeClassContext","createContext","useWindowSizeClass","useContext","WindowSizeClassProvider","_ref","windowSizes","children","width","useWindowDimensions","windowSizeClass","useMemo","createElement","Provider","value"],"sources":["WindowSizeClassContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useMemo } from 'react';\nimport { useWindowDimensions } from 'react-native';\n\nexport type WindowSizeClass = 'base' | 'sm' | 'md' | 'lg' | 'xl';\n\nexport type WindowSizes = Record<WindowSizeClass, number>;\n\nexport const defaultWindowSizes: WindowSizes = { base: 0, sm: 600, md: 905, lg: 1240, xl: 1440 };\n\nexport interface WindowSizeClassProviderProps {\n  windowSizes?: WindowSizes;\n}\n\nexport const WindowSizeClassContext = createContext<WindowSizeClass>('base');\n\nexport const useWindowSizeClass = () => useContext(WindowSizeClassContext);\n\nexport const WindowSizeClassProvider: React.FC<WindowSizeClassProviderProps> = ({\n  windowSizes = defaultWindowSizes,\n  children,\n}) => {\n  const { width } = useWindowDimensions();\n\n  const windowSizeClass: WindowSizeClass = useMemo(() => {\n    if (width >= windowSizes.base && width < windowSizes.sm) return 'base';\n    if (width >= windowSizes.sm && width < windowSizes.md) return 'sm';\n    if (width >= windowSizes.md && width < windowSizes.lg) return 'md';\n    if (width >= windowSizes.lg && width < windowSizes.xl) return 'lg';\n    return 'xl';\n  }, [width, windowSizes]);\n\n  return <WindowSizeClassContext.Provider value={windowSizeClass}>{children}</WindowSizeClassContext.Provider>;\n};\n"],"mappings":"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"}