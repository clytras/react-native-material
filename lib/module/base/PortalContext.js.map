{"version":3,"names":["React","createContext","useContext","useEffect","useMemo","useState","StyleSheet","View","PortalContext","usePortalContext","portal","Error","PortalProvider","_ref","children","portals","setPortals","createElement","Provider","value","Outlet","Fragment","map","_ref2","key","pointerEvents","style","absoluteFill","Portal","_ref3","_key","Date","now","Math","random","filter","p"],"sources":["PortalContext.tsx"],"sourcesContent":["import React, { createContext, Dispatch, SetStateAction, useContext, useEffect, useMemo, useState } from 'react';\nimport { StyleSheet, View } from 'react-native';\n\nexport const PortalContext = createContext<{\n  portals: PortalProps[];\n  setPortals: Dispatch<SetStateAction<PortalProps[]>>;\n} | null>(null);\n\nexport const usePortalContext = () => {\n  const portal = useContext(PortalContext);\n  if (!portal) {\n    throw new Error('usePortalContext must be used within a PortalContext');\n  }\n  return portal;\n};\n\nexport const PortalProvider: React.FC = ({ children }) => {\n  const [portals, setPortals] = useState<PortalProps[]>([]);\n\n  return <PortalContext.Provider value={{ portals, setPortals }}>{children}</PortalContext.Provider>;\n};\n\nexport const Outlet: React.FC = () => {\n  const { portals } = usePortalContext();\n\n  return (\n    <React.Fragment>\n      {portals.map(({ key, children }) => (\n        <View key={key} pointerEvents=\"box-none\" style={StyleSheet.absoluteFill}>\n          {children}\n        </View>\n      ))}\n    </React.Fragment>\n  );\n};\n\nexport interface PortalProps {\n  key?: React.Key;\n\n  children?: React.ReactNode;\n}\n\nexport const Portal: React.FC<PortalProps> = ({ key, children }) => {\n  const { setPortals } = usePortalContext();\n\n  const _key = useMemo(() => key ?? `${Date.now() + Math.random()}`, [key]);\n\n  useEffect(() => {\n    setPortals((portals) => [...portals, { key: _key, children }]);\n\n    return () => {\n      setPortals((portals) => portals.filter((p) => p.key !== _key));\n    };\n  }, [_key, setPortals, children]);\n\n  return null;\n};\n"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,aAAa,EAA4BC,UAAU,EAAEC,SAAS,EAAEC,OAAO,EAAEC,QAAQ,QAAQ,OAAO;AAChH,SAASC,UAAU,EAAEC,IAAI,QAAQ,cAAc;AAE/C,OAAO,MAAMC,aAAa,gBAAGP,aAAa,CAGhC,IAAI,CAAC;AAEf,OAAO,MAAMQ,gBAAgB,GAAGA,CAAA,KAAM;EACpC,MAAMC,MAAM,GAAGR,UAAU,CAACM,aAAa,CAAC;EACxC,IAAI,CAACE,MAAM,EAAE;IACX,MAAM,IAAIC,KAAK,CAAC,sDAAsD,CAAC;EACzE;EACA,OAAOD,MAAM;AACf,CAAC;AAED,OAAO,MAAME,cAAwB,GAAGC,IAAA,IAAkB;EAAA,IAAjB;IAAEC;EAAS,CAAC,GAAAD,IAAA;EACnD,MAAM,CAACE,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAgB,EAAE,CAAC;EAEzD,oBAAOL,KAAA,CAAAiB,aAAA,CAACT,aAAa,CAACU,QAAQ;IAACC,KAAK,EAAE;MAAEJ,OAAO;MAAEC;IAAW;EAAE,GAAEF,QAAiC,CAAC;AACpG,CAAC;AAED,OAAO,MAAMM,MAAgB,GAAGA,CAAA,KAAM;EACpC,MAAM;IAAEL;EAAQ,CAAC,GAAGN,gBAAgB,CAAC,CAAC;EAEtC,oBACET,KAAA,CAAAiB,aAAA,CAACjB,KAAK,CAACqB,QAAQ,QACZN,OAAO,CAACO,GAAG,CAACC,KAAA;IAAA,IAAC;MAAEC,GAAG;MAAEV;IAAS,CAAC,GAAAS,KAAA;IAAA,oBAC7BvB,KAAA,CAAAiB,aAAA,CAACV,IAAI;MAACiB,GAAG,EAAEA,GAAI;MAACC,aAAa,EAAC,UAAU;MAACC,KAAK,EAAEpB,UAAU,CAACqB;IAAa,GACrEb,QACG,CAAC;EAAA,CACR,CACa,CAAC;AAErB,CAAC;AAQD,OAAO,MAAMc,MAA6B,GAAGC,KAAA,IAAuB;EAAA,IAAtB;IAAEL,GAAG;IAAEV;EAAS,CAAC,GAAAe,KAAA;EAC7D,MAAM;IAAEb;EAAW,CAAC,GAAGP,gBAAgB,CAAC,CAAC;EAEzC,MAAMqB,IAAI,GAAG1B,OAAO,CAAC,MAAMoB,GAAG,IAAK,GAAEO,IAAI,CAACC,GAAG,CAAC,CAAC,GAAGC,IAAI,CAACC,MAAM,CAAC,CAAE,EAAC,EAAE,CAACV,GAAG,CAAC,CAAC;EAEzErB,SAAS,CAAC,MAAM;IACda,UAAU,CAAED,OAAO,IAAK,CAAC,GAAGA,OAAO,EAAE;MAAES,GAAG,EAAEM,IAAI;MAAEhB;IAAS,CAAC,CAAC,CAAC;IAE9D,OAAO,MAAM;MACXE,UAAU,CAAED,OAAO,IAAKA,OAAO,CAACoB,MAAM,CAAEC,CAAC,IAAKA,CAAC,CAACZ,GAAG,KAAKM,IAAI,CAAC,CAAC;IAChE,CAAC;EACH,CAAC,EAAE,CAACA,IAAI,EAAEd,UAAU,EAAEF,QAAQ,CAAC,CAAC;EAEhC,OAAO,IAAI;AACb,CAAC"}