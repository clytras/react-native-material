{"version":3,"names":["React","useCallback","useMemo","useState","StyleSheet","View","Surface","Text","ActivityIndicator","Pressable","usePaletteColor","useSurfaceScale","useStyles","useAnimatedElevation","Button","_ref","title","leading","trailing","variant","color","tintColor","compact","disableElevation","uppercase","loading","loadingIndicatorPosition","loadingIndicator","style","pressableContainerStyle","contentContainerStyle","titleStyle","leadingContainerStyle","trailingContainerStyle","loadingOverlayContainerStyle","pressEffect","pressEffectColor","onPress","onPressIn","onPressOut","onLongPress","onBlur","onFocus","onMouseEnter","onMouseLeave","delayLongPress","disabled","hitSlop","pressRetentionOffset","android_disableSound","android_ripple","testOnly_pressed","rest","surfaceScale","p","hex","contentColor","on","main","hasLeading","hasTrailing","styles","_ref2","shapes","container","backgroundColor","outline","small","borderWidth","borderColor","pressableContainer","overflow","pressable","minWidth","height","flexDirection","justifyContent","alignItems","paddingStart","paddingEnd","textTransform","opacity","leadingContainer","marginEnd","trailingContainer","marginStart","loadingOverlayContainer","absoluteFillObject","getTitle","createElement","selectable","getLoadingIndicator","getLeading","size","getTrailing","hovered","setHovered","handleMouseEnter","event","handleMouseLeave","pressed","setPressed","handlePressIn","handlePressOut","animatedElevation","_extends","category","absoluteFill","pointerEvents"],"sources":["Button.tsx"],"sourcesContent":["import React, { useCallback, useMemo, useState } from 'react';\nimport {\n  GestureResponderEvent,\n  NativeSyntheticEvent,\n  StyleProp,\n  StyleSheet,\n  TargetedEvent,\n  TextStyle,\n  View,\n  ViewStyle,\n} from 'react-native';\nimport Surface, { SurfaceProps } from './Surface';\nimport Text from './Text';\nimport ActivityIndicator from './ActivityIndicator';\nimport Pressable, { PressableProps } from './Pressable';\nimport { Color, usePaletteColor } from './hooks/use-palette-color';\nimport { useSurfaceScale } from './hooks/use-surface-scale';\nimport { useStyles } from './hooks/use-styles';\nimport { useAnimatedElevation } from './hooks/use-animated-elevation';\n\nexport interface ButtonProps extends Omit<SurfaceProps, 'hitSlop'>, Omit<PressableProps, 'style' | 'children'> {\n  /**\n   * The text content of the button.\n   */\n  title: string | React.ReactNode | ((props: { color: string }) => React.ReactNode | null) | null;\n\n  /**\n   * The element placed before the `title`.\n   */\n  leading?: React.ReactNode | ((props: { color: string; size: number }) => React.ReactNode | null) | null;\n\n  /**\n   * The element placed after the `title`.\n   */\n  trailing?: React.ReactNode | ((props: { color: string; size: number }) => React.ReactNode | null) | null;\n\n  /**\n   * The style of the button.\n   * - `text`: Text buttons are typically used for less important actions (low emphasis).\n   * - `outlined`: Outlined buttons are used for more emphasis than text buttons due to the stroke (medium emphasis).\n   * - `contained`: Contained buttons have more emphasis, as they use a color fill and shadow (high emphasis).\n   *\n   * @default \"contained\"\n   */\n  variant?: 'text' | 'outlined' | 'contained';\n\n  /**\n   * The main color of the button.\n   * for `contained` buttons, this is the background color.\n   * for `outlined` and `text` buttons, this is the color of the content (text, icons, etc.).\n   *\n   * @default \"primary\"\n   */\n  color?: Color;\n\n  /**\n   * The color of the `contained` buttons content (text, icons, etc.). No effect on `outlined` and `text` buttons.\n   */\n  tintColor?: Color;\n\n  /**\n   * Smaller horizontal padding, useful for `text` buttons in a row.\n   *\n   * @default false\n   */\n  compact?: boolean;\n\n  /**\n   * If `true`, no shadow is used. No effect on `outlined` and `text` buttons.\n   *\n   * @default false\n   */\n  disableElevation?: boolean;\n\n  /**\n   * If `false`, the button title is not rendered in upper case. No effect if you pass a React.Node as the `title` prop.\n   *\n   * @default true\n   */\n  uppercase?: boolean;\n\n  /**\n   * Whether to show a loading indicator.\n   *\n   * @default false\n   */\n  loading?: boolean;\n\n  /**\n   * The place where the loading indicator should appear.\n   * - `leading`: The indicator will replace the `leading` element.\n   * - `trailing`: The indicator will replace the `trailing` element.\n   * - `overlay`: The indicator will be added as an overlay over the button.\n   *\n   * @default \"leading\"\n   */\n  loadingIndicatorPosition?: 'leading' | 'trailing' | 'overlay';\n\n  /**\n   * A React.Node to replace the default loading indicator. Also, you can pass a string to show a text (e.g. \"Loading...\").\n   */\n  loadingIndicator?: string | React.ReactNode | ((props: { color: string }) => React.ReactNode | null) | null;\n\n  /**\n   * The style of the button's pressable component container.\n   */\n  pressableContainerStyle?: StyleProp<ViewStyle>;\n\n  /**\n   * The style of the button's container.\n   */\n  contentContainerStyle?: PressableProps['style'];\n\n  /**\n   * The style of the button's text. No effect if you pass a React.Node as the `title` prop.\n   */\n  titleStyle?: StyleProp<TextStyle>;\n\n  /**\n   * The style of the button's leading element container.\n   */\n  leadingContainerStyle?: StyleProp<ViewStyle>;\n\n  /**\n   * The style of the button's trailing element container.\n   */\n  trailingContainerStyle?: StyleProp<ViewStyle>;\n\n  /**\n   * The style of the button's loading indicator overlay view. No effect if `loadingIndicatorPosition` is not `overlay`.\n   */\n  loadingOverlayContainerStyle?: StyleProp<ViewStyle>;\n}\n\nconst Button: React.FC<ButtonProps> = ({\n  title,\n  leading,\n  trailing,\n  variant = 'contained',\n  color = 'primary',\n  tintColor,\n  compact = false,\n  disableElevation = false,\n  uppercase = true,\n  loading = false,\n  loadingIndicatorPosition = 'leading',\n  loadingIndicator,\n\n  style,\n  pressableContainerStyle,\n  contentContainerStyle,\n  titleStyle,\n  leadingContainerStyle,\n  trailingContainerStyle,\n  loadingOverlayContainerStyle,\n\n  pressEffect,\n  pressEffectColor,\n  onPress,\n  onPressIn,\n  onPressOut,\n  onLongPress,\n  onBlur,\n  onFocus,\n  onMouseEnter,\n  onMouseLeave,\n  delayLongPress,\n  disabled,\n  hitSlop,\n  pressRetentionOffset,\n  android_disableSound,\n  android_ripple,\n  testOnly_pressed,\n\n  ...rest\n}) => {\n  const surfaceScale = useSurfaceScale();\n\n  const p = usePaletteColor(\n    disabled ? surfaceScale(0.12).hex() : color,\n    disabled ? surfaceScale(0.35).hex() : tintColor\n  );\n\n  const contentColor = useMemo(\n    () => (variant === 'contained' ? p.on : disabled ? p.on : p.main),\n    [variant, p, disabled]\n  );\n\n  const hasLeading = useMemo(\n    () => !!leading || (loading && loadingIndicatorPosition === 'leading'),\n    [leading, loading, loadingIndicatorPosition]\n  );\n\n  const hasTrailing = useMemo(\n    () => !!trailing || (loading && loadingIndicatorPosition === 'trailing'),\n    [trailing, loading, loadingIndicatorPosition]\n  );\n\n  const styles = useStyles(\n    ({ shapes }) => ({\n      container: {\n        backgroundColor: variant === 'contained' ? p.main : 'transparent',\n      },\n      outline: {\n        ...shapes.small,\n        borderWidth: 1,\n        borderColor: surfaceScale(0.12).hex(),\n      },\n      pressableContainer: {\n        ...shapes.small,\n        overflow: 'hidden',\n      },\n      pressable: {\n        minWidth: 64,\n        height: 36,\n        flexDirection: 'row',\n        justifyContent: 'center',\n        alignItems: 'center',\n        paddingStart: hasLeading ? (compact ? 6 : 12) : compact ? 8 : 16,\n        paddingEnd: hasTrailing ? (compact ? 6 : 12) : compact ? 8 : 16,\n      },\n      titleStyle: {\n        textTransform: uppercase ? 'uppercase' : 'none',\n        opacity: loading && loadingIndicatorPosition === 'overlay' ? 0 : 1,\n      },\n      leadingContainer: {\n        marginEnd: compact ? 6 : 8,\n        opacity: loading && loadingIndicatorPosition === 'overlay' ? 0 : 1,\n      },\n      trailingContainer: {\n        marginStart: compact ? 6 : 8,\n        opacity: loading && loadingIndicatorPosition === 'overlay' ? 0 : 1,\n      },\n      loadingOverlayContainer: {\n        ...StyleSheet.absoluteFillObject,\n        justifyContent: 'center',\n        alignItems: 'center',\n      },\n    }),\n    [variant, uppercase, compact, loading, loadingIndicatorPosition, p, hasLeading, hasTrailing, surfaceScale]\n  );\n\n  const getTitle = () => {\n    switch (typeof title) {\n      case 'string':\n        return (\n          <Text variant=\"button\" selectable={false} style={[{ color: contentColor }, styles.titleStyle, titleStyle]}>\n            {title}\n          </Text>\n        );\n      case 'function':\n        return title({ color: contentColor });\n      default:\n        return title;\n    }\n  };\n\n  const getLoadingIndicator = () => {\n    if (!loadingIndicator) return <ActivityIndicator color={contentColor} />;\n    switch (typeof loadingIndicator) {\n      case 'string':\n        return (\n          <Text variant=\"button\" style={{ color: contentColor }}>\n            {loadingIndicator}\n          </Text>\n        );\n      case 'function':\n        return loadingIndicator({ color: contentColor });\n      default:\n        return loadingIndicator;\n    }\n  };\n\n  const getLeading = () => {\n    if (loading && loadingIndicatorPosition === 'leading') return getLoadingIndicator();\n    return typeof leading === 'function' ? leading({ color: contentColor, size: 18 }) : leading;\n  };\n\n  const getTrailing = () => {\n    if (loading && loadingIndicatorPosition === 'trailing') return getLoadingIndicator();\n    return typeof trailing === 'function' ? trailing({ color: contentColor, size: 18 }) : trailing;\n  };\n\n  const [hovered, setHovered] = useState(false);\n\n  const handleMouseEnter = useCallback(\n    (event: NativeSyntheticEvent<TargetedEvent>) => {\n      onMouseEnter?.(event);\n      setHovered(true);\n    },\n    [onMouseEnter]\n  );\n\n  const handleMouseLeave = useCallback(\n    (event: NativeSyntheticEvent<TargetedEvent>) => {\n      onMouseLeave?.(event);\n      setHovered(false);\n    },\n    [onMouseLeave]\n  );\n\n  const [pressed, setPressed] = useState(false);\n\n  const handlePressIn = useCallback(\n    (event: GestureResponderEvent) => {\n      onPressIn?.(event);\n      setPressed(true);\n    },\n    [onPressIn]\n  );\n\n  const handlePressOut = useCallback(\n    (event: GestureResponderEvent) => {\n      onPressOut?.(event);\n      setPressed(false);\n    },\n    [onPressOut]\n  );\n\n  const animatedElevation = useAnimatedElevation(\n    variant === 'contained' && !disableElevation && !disabled ? (pressed ? 8 : hovered ? 4 : 2) : 0\n  );\n\n  return (\n    <Surface category=\"small\" style={[animatedElevation, styles.container, style]} {...rest}>\n      <View style={[styles.pressableContainer, pressableContainerStyle]}>\n        <Pressable\n          style={[styles.pressable, contentContainerStyle]}\n          pressEffect={pressEffect}\n          pressEffectColor={pressEffectColor ?? contentColor}\n          onPress={onPress}\n          onPressIn={handlePressIn}\n          onPressOut={handlePressOut}\n          onLongPress={onLongPress}\n          onBlur={onBlur}\n          onFocus={onFocus}\n          onMouseEnter={handleMouseEnter}\n          onMouseLeave={handleMouseLeave}\n          delayLongPress={delayLongPress}\n          disabled={disabled}\n          hitSlop={hitSlop}\n          pressRetentionOffset={pressRetentionOffset}\n          android_disableSound={android_disableSound}\n          android_ripple={android_ripple}\n          testOnly_pressed={testOnly_pressed}\n        >\n          {hasLeading && <View style={[styles.leadingContainer, leadingContainerStyle]}>{getLeading()}</View>}\n          {getTitle()}\n          {hasTrailing && <View style={[styles.trailingContainer, trailingContainerStyle]}>{getTrailing()}</View>}\n\n          {loading && loadingIndicatorPosition === 'overlay' && (\n            <View style={[styles.loadingOverlayContainer, loadingOverlayContainerStyle]}>{getLoadingIndicator()}</View>\n          )}\n        </Pressable>\n      </View>\n      {variant === 'outlined' && <View style={[StyleSheet.absoluteFill, styles.outline]} pointerEvents=\"none\" />}\n    </Surface>\n  );\n};\n\nexport default Button;\n"],"mappings":"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"}